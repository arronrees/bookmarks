// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email      String     @unique
  password   String
  bookmarks  Bookmark[]
  categories Category[]

  @@map("users")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  url        String
  title      String?
  userId     Int                  @map("user_id")
  user       User                 @relation(fields: [userId], references: [id])
  categories BookmarkCategories[]

  @@map("bookmarks")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title     String
  slug      String
  bookmarks BookmarkCategories[]
  user      User                 @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([userId, slug])
  @@map("categories")
}

model BookmarkCategories {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  bookmark   Bookmark @relation(fields: [bookmarkId], references: [id])
  bookmarkId Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@unique([bookmarkId, categoryId])
  @@map("bookmark_categories")
}
